import { GLTFExporter } from "../glTFExporter.js";
import { OpenPBRMaterial } from "@babylonjs/core/Materials/PBR/openpbrMaterial.js";
const NAME = "KHR_materials_clearcoat_darkening";
/**
 * @internal
 */
// eslint-disable-next-line @typescript-eslint/naming-convention
export class KHR_materials_clearcoat_darkening {
    constructor(exporter) {
        /** Name of this extension */
        this.name = NAME;
        /** Defines whether this extension is enabled */
        this.enabled = true;
        /** Defines whether this extension is required */
        this.required = false;
        this._wasUsed = false;
        this._exporter = exporter;
    }
    dispose() { }
    /** @internal */
    get wasUsed() {
        return this._wasUsed;
    }
    async postExportMaterialAdditionalTexturesAsync(context, node, babylonMaterial) {
        const additionalTextures = [];
        if (babylonMaterial instanceof OpenPBRMaterial) {
            if (babylonMaterial.coatDarkening) {
                if (babylonMaterial.coatDarkeningTexture) {
                    additionalTextures.push(babylonMaterial.coatDarkeningTexture);
                }
                return additionalTextures;
            }
        }
        return [];
    }
    // eslint-disable-next-line no-restricted-syntax
    postExportMaterialAsync(context, node, babylonMaterial) {
        return new Promise((resolve) => {
            let coatDarkeningFactor = null;
            let coatDarkeningTexture = null;
            if (babylonMaterial instanceof OpenPBRMaterial) {
                coatDarkeningFactor = babylonMaterial.coatDarkening;
                coatDarkeningTexture = babylonMaterial.coatDarkeningTexture;
            }
            if (coatDarkeningFactor === null || (coatDarkeningFactor === 1.0 && coatDarkeningTexture === null)) {
                return resolve(node);
            }
            // This material must have the clearcoat extension already before
            // we can add the clearcoat darkening sub-extension
            const parentExt = node.extensions ? node.extensions["KHR_materials_clearcoat"] : null;
            if (!parentExt) {
                return resolve(node);
            }
            this._wasUsed = true;
            const coatDarkeningTextureInfo = this._exporter._materialExporter.getTextureInfo(coatDarkeningTexture);
            const coatDarkeningInfo = {
                clearcoatDarkeningFactor: coatDarkeningFactor,
                clearcoatDarkeningTexture: coatDarkeningTextureInfo ?? undefined,
            };
            if (coatDarkeningInfo.clearcoatDarkeningTexture !== null) {
                this._exporter._materialNeedsUVsSet.add(babylonMaterial);
            }
            parentExt.extensions = parentExt.extensions || {};
            parentExt.extensions[NAME] = coatDarkeningInfo;
            return resolve(node);
        });
    }
}
GLTFExporter.RegisterExtension(NAME, (exporter) => new KHR_materials_clearcoat_darkening(exporter), 105);
//# sourceMappingURL=KHR_materials_clearcoat_darkening.js.map