import { GLTFExporter } from "../glTFExporter.js";
import { GetMimeType } from "@babylonjs/core/Misc/fileTools.js";
const NAME = "KHR_texture_basisu";
/**
 * [Specification](https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Khronos/KHR_texture_basisu/README.md)
 */
// eslint-disable-next-line @typescript-eslint/naming-convention
export class KHR_texture_basisu {
    get wasUsed() {
        return this._wasUsed;
    }
    constructor(exporter) {
        this.name = NAME;
        this.enabled = true;
        this.required = true;
        this._wasUsed = false;
        this._exporter = exporter;
    }
    dispose() { }
    postExportTexture(_, textureInfo) {
        const texture = this._exporter._textures[textureInfo.index];
        const imageIndex = texture.source;
        if (imageIndex === undefined) {
            return;
        }
        const image = this._exporter._images[imageIndex];
        const sourceMimeType = image.mimeType || GetMimeType(image.uri);
        if (sourceMimeType !== "image/ktx2" /* ImageMimeType.KTX2 */) {
            return;
        }
        texture.source = undefined;
        texture.extensions || (texture.extensions = {});
        texture.extensions[NAME] = {
            source: imageIndex,
        };
        this._wasUsed = true;
    }
}
GLTFExporter.RegisterExtension(NAME, (exporter) => new KHR_texture_basisu(exporter));
//# sourceMappingURL=KHR_texture_basisu.js.map