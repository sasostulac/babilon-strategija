{"version":3,"file":"KHR_materials_diffuse_roughness.js","sourceRoot":"","sources":["../../../../../../dev/serializers/src/glTF/2.0/Extensions/KHR_materials_diffuse_roughness.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IMaterial, IKHRMaterialsDiffuseRoughness } from \"babylonjs-gltf2interface\";\r\nimport type { IGLTFExporterExtensionV2 } from \"../glTFExporterExtension\";\r\nimport { GLTFExporter } from \"../glTFExporter\";\r\nimport type { Material } from \"core/Materials/material\";\r\nimport { PBRBaseMaterial } from \"core/Materials/PBR/pbrBaseMaterial\";\r\nimport type { BaseTexture } from \"core/Materials/Textures/baseTexture\";\r\nimport { OpenPBRMaterial } from \"core/Materials/PBR/openpbrMaterial\";\r\nimport type { Nullable } from \"core/types\";\r\n\r\nconst NAME = \"KHR_materials_diffuse_roughness\";\r\n\r\n/**\r\n * @internal\r\n */\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nexport class KHR_materials_diffuse_roughness implements IGLTFExporterExtensionV2 {\r\n    /** Name of this extension */\r\n    public readonly name = NAME;\r\n\r\n    /** Defines whether this extension is enabled */\r\n    public enabled = true;\r\n\r\n    /** Defines whether this extension is required */\r\n    public required = false;\r\n\r\n    private _exporter: GLTFExporter;\r\n\r\n    private _wasUsed = false;\r\n\r\n    constructor(exporter: GLTFExporter) {\r\n        this._exporter = exporter;\r\n    }\r\n\r\n    public dispose() {}\r\n\r\n    /** @internal */\r\n    public get wasUsed() {\r\n        return this._wasUsed;\r\n    }\r\n\r\n    public async postExportMaterialAdditionalTexturesAsync?(context: string, node: IMaterial, babylonMaterial: Material): Promise<BaseTexture[]> {\r\n        const additionalTextures: BaseTexture[] = [];\r\n        if (babylonMaterial instanceof PBRBaseMaterial) {\r\n            if (babylonMaterial._baseDiffuseRoughness) {\r\n                if (babylonMaterial._baseDiffuseRoughnessTexture) {\r\n                    additionalTextures.push(babylonMaterial._baseDiffuseRoughnessTexture);\r\n                }\r\n                return additionalTextures;\r\n            }\r\n        } else if (babylonMaterial instanceof OpenPBRMaterial) {\r\n            if (babylonMaterial.baseDiffuseRoughness) {\r\n                if (babylonMaterial.baseDiffuseRoughnessTexture) {\r\n                    additionalTextures.push(babylonMaterial.baseDiffuseRoughnessTexture);\r\n                }\r\n                return additionalTextures;\r\n            }\r\n        }\r\n\r\n        return [];\r\n    }\r\n\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    public postExportMaterialAsync?(context: string, node: IMaterial, babylonMaterial: Material): Promise<IMaterial> {\r\n        return new Promise((resolve) => {\r\n            let diffuseRoughnessFactor: Nullable<number> = null;\r\n            let diffuseRoughnessTexture: Nullable<BaseTexture> = null;\r\n            if (babylonMaterial instanceof PBRBaseMaterial) {\r\n                diffuseRoughnessFactor = babylonMaterial._baseDiffuseRoughness;\r\n                diffuseRoughnessTexture = babylonMaterial._baseDiffuseRoughnessTexture;\r\n            } else if (babylonMaterial instanceof OpenPBRMaterial) {\r\n                diffuseRoughnessFactor = babylonMaterial.baseDiffuseRoughness;\r\n                diffuseRoughnessTexture = babylonMaterial.baseDiffuseRoughnessTexture;\r\n            }\r\n            if (!diffuseRoughnessFactor) {\r\n                resolve(node);\r\n                return;\r\n            }\r\n\r\n            this._wasUsed = true;\r\n\r\n            node.extensions = node.extensions || {};\r\n\r\n            const diffuseRoughnessTextureInfo = this._exporter._materialExporter.getTextureInfo(diffuseRoughnessTexture);\r\n\r\n            const diffuseRoughnessInfo: IKHRMaterialsDiffuseRoughness = {\r\n                diffuseRoughnessFactor: diffuseRoughnessFactor,\r\n                diffuseRoughnessTexture: diffuseRoughnessTextureInfo ?? undefined,\r\n            };\r\n\r\n            if (diffuseRoughnessInfo.diffuseRoughnessTexture !== null) {\r\n                this._exporter._materialNeedsUVsSet.add(babylonMaterial);\r\n            }\r\n\r\n            node.extensions[NAME] = diffuseRoughnessInfo;\r\n\r\n            resolve(node);\r\n        });\r\n    }\r\n}\r\n\r\nGLTFExporter.RegisterExtension(NAME, (exporter) => new KHR_materials_diffuse_roughness(exporter));\r\n"]}