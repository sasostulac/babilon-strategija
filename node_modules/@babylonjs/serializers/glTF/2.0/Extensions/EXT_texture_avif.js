import { GLTFExporter } from "../glTFExporter.js";
import { GetMimeType } from "@babylonjs/core/Misc/fileTools.js";
const NAME = "EXT_texture_avif";
/**
 * [Proposed Specification](https://github.com/KhronosGroup/glTF/blob/5cb7518cf9a1bfb8268320026961b21caf5a4aac/extensions/2.0/Vendor/EXT_texture_avif/README.md)
 * @experimental
 */
// eslint-disable-next-line @typescript-eslint/naming-convention
export class EXT_texture_avif {
    get wasUsed() {
        return this._wasUsed;
    }
    constructor(exporter) {
        this.name = NAME;
        this.enabled = true;
        this.required = true;
        this._wasUsed = false;
        this._exporter = exporter;
    }
    dispose() { }
    postExportTexture(_, textureInfo) {
        const texture = this._exporter._textures[textureInfo.index];
        const imageIndex = texture.source;
        if (imageIndex === undefined) {
            return;
        }
        const image = this._exporter._images[imageIndex];
        const sourceMimeType = image.mimeType || GetMimeType(image.uri);
        if (sourceMimeType !== "image/avif" /* ImageMimeType.AVIF */) {
            return;
        }
        texture.source = undefined;
        texture.extensions || (texture.extensions = {});
        texture.extensions[NAME] = {
            source: imageIndex,
        };
        this._wasUsed = true;
    }
}
GLTFExporter.RegisterExtension(NAME, (exporter) => new EXT_texture_avif(exporter));
//# sourceMappingURL=EXT_texture_avif.js.map