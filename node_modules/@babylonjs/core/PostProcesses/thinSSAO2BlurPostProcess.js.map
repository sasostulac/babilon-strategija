{"version":3,"file":"thinSSAO2BlurPostProcess.js","sourceRoot":"","sources":["../../../../dev/core/src/PostProcesses/thinSSAO2BlurPostProcess.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Nullable, AbstractEngine, EffectWrapperCreationOptions } from \"core/index\";\r\nimport { EffectWrapper } from \"../Materials/effectRenderer\";\r\nimport { Engine } from \"../Engines/engine\";\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class ThinSSAO2BlurPostProcess extends EffectWrapper {\r\n    public static readonly FragmentUrl = \"ssao2\";\r\n\r\n    public static readonly Uniforms = [\"outSize\", \"samples\", \"soften\", \"tolerance\"];\r\n\r\n    public static readonly Samplers = [\"textureSampler\", \"depthSampler\"];\r\n\r\n    protected override _gatherImports(useWebGPU: boolean, list: Promise<any>[]) {\r\n        if (useWebGPU) {\r\n            this._webGPUReady = true;\r\n            list.push(import(\"../ShadersWGSL/ssao2.fragment\"));\r\n        } else {\r\n            list.push(import(\"../Shaders/ssao2.fragment\"));\r\n        }\r\n    }\r\n\r\n    constructor(name: string, engine: Nullable<AbstractEngine> = null, isHorizontal: boolean, options?: EffectWrapperCreationOptions) {\r\n        super({\r\n            ...options,\r\n            name,\r\n            engine: engine || Engine.LastCreatedEngine!,\r\n            useShaderStore: true,\r\n            useAsPostProcess: true,\r\n            fragmentShader: ThinSSAO2BlurPostProcess.FragmentUrl,\r\n            uniforms: ThinSSAO2BlurPostProcess.Uniforms,\r\n            samplers: ThinSSAO2BlurPostProcess.Samplers,\r\n            defines: \"#define BLUR\\n\" + (isHorizontal ? \"#define BLUR_H\\n\" : \"\"),\r\n        });\r\n\r\n        this._isHorizontal = isHorizontal;\r\n\r\n        const defines = this._getDefinesForBlur(this.expensiveBlur, this.bypassBlur);\r\n        const samplers = this._getSamplersForBlur(this.bypassBlur);\r\n\r\n        this.updateEffect(defines, null, samplers);\r\n    }\r\n\r\n    private readonly _isHorizontal: boolean;\r\n    private _bypassBlur: boolean = false;\r\n\r\n    public textureSize: number = 0;\r\n\r\n    public bilateralSamples: number = 16;\r\n\r\n    public bilateralSoften: number = 0;\r\n\r\n    public bilateralTolerance: number = 0;\r\n\r\n    public set bypassBlur(b: boolean) {\r\n        const defines = this._getDefinesForBlur(this.expensiveBlur, b);\r\n        const samplers = this._getSamplersForBlur(b);\r\n\r\n        this.updateEffect(defines, null, samplers);\r\n\r\n        this._bypassBlur = b;\r\n    }\r\n    public get bypassBlur(): boolean {\r\n        return this._bypassBlur;\r\n    }\r\n\r\n    private _expensiveBlur: boolean = true;\r\n\r\n    public set expensiveBlur(b: boolean) {\r\n        const defines = this._getDefinesForBlur(b, this._bypassBlur);\r\n\r\n        this.updateEffect(defines);\r\n\r\n        this._expensiveBlur = b;\r\n    }\r\n    public get expensiveBlur(): boolean {\r\n        return this._expensiveBlur;\r\n    }\r\n\r\n    public override bind(noDefaultBindings = false) {\r\n        super.bind(noDefaultBindings);\r\n\r\n        const effect = this._drawWrapper.effect!;\r\n\r\n        effect.setFloat(\"outSize\", this.textureSize);\r\n        effect.setInt(\"samples\", this.bilateralSamples);\r\n        effect.setFloat(\"soften\", this.bilateralSoften);\r\n        effect.setFloat(\"tolerance\", this.bilateralTolerance);\r\n    }\r\n\r\n    private _getSamplersForBlur(disabled: boolean): Array<string> {\r\n        return disabled ? [\"textureSampler\"] : [\"textureSampler\", \"depthSampler\"];\r\n    }\r\n\r\n    private _getDefinesForBlur(bilateral: boolean, disabled: boolean): string {\r\n        let define = \"#define BLUR\\n\";\r\n        if (disabled) {\r\n            define += \"#define BLUR_BYPASS\\n\";\r\n        }\r\n        if (!bilateral) {\r\n            define += \"#define BLUR_LEGACY\\n\";\r\n        }\r\n        return this._isHorizontal ? define + \"#define BLUR_H\\n\" : define;\r\n    }\r\n}\r\n"]}