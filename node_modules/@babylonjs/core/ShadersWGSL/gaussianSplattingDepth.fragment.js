// Do not edit.
import { ShaderStore } from "../Engines/shaderStore.js";
import "./ShadersInclude/gaussianSplattingFragmentDeclaration.js";
const name = "gaussianSplattingDepthPixelShader";
const shader = `#include<gaussianSplattingFragmentDeclaration>
varying vPosition: vec2f;fn checkDiscard(inPosition: vec2f)->vec4f {var A : f32=-dot(inPosition,inPosition);if (A<-1.) {discard;}
return vec4f(0.0);}
@fragment
fn main(input: FragmentInputs)->FragmentOutputs {fragmentOutputs.color=checkDiscard(fragmentInputs.vPosition);}
`;
// Sideeffect
if (!ShaderStore.ShadersStoreWGSL[name]) {
    ShaderStore.ShadersStoreWGSL[name] = shader;
}
/** @internal */
export const gaussianSplattingDepthPixelShaderWGSL = { name, shader };
//# sourceMappingURL=gaussianSplattingDepth.fragment.js.map