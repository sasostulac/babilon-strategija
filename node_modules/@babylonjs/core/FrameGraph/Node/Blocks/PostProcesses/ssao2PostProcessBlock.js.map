{"version":3,"file":"ssao2PostProcessBlock.js","sourceRoot":"","sources":["../../../../../../../dev/core/src/FrameGraph/Node/Blocks/PostProcesses/ssao2PostProcessBlock.ts"],"names":[],"mappings":";AACA,OAAO,EAAE,SAAS,EAAE,yCAA+B;AACnD,OAAO,EAAE,aAAa,EAAE,MAAM,4BAA4B,CAAC;AAC3D,OAAO,EAAE,wCAAwC,EAAE,MAAM,kCAAkC,CAAC;AAC5F,OAAO,EAAE,sBAAsB,EAA0B,MAAM,sCAAsC,CAAC;AACtG,OAAO,EAAE,oCAAoC,EAAE,MAAM,yDAAyD,CAAC;AAC/G,OAAO,EAAE,mCAAmC,EAAE,MAAM,wBAAwB,CAAC;AAE7E;;GAEG;AACH,MAAM,OAAO,oCAAqC,SAAQ,mCAAmC;IAKzF;;OAEG;IACH,IAAoB,IAAI;QACpB,OAAO,IAAI,CAAC,eAAe,CAAC;IAChC,CAAC;IAED;;;;;;;;OAQG;IACH,YAAmB,IAAY,EAAE,UAAsB,EAAE,KAAY,EAAE,SAAS,GAAG,CAAC,EAAE,SAAS,GAAG,CAAC,EAAE,WAAW,GAAG,SAAS,CAAC,yBAAyB;QAClJ,KAAK,CAAC,IAAI,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;QAE/B,IAAI,CAAC,iCAAiC,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC;QAE7E,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,wCAAwC,CAAC,MAAM,CAAC,CAAC;QAC9E,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,wCAAwC,CAAC,gBAAgB,CAAC,CAAC;QAC3F,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,wCAAwC,CAAC,iBAAiB,CAAC,CAAC;QAE7F,IAAI,CAAC,+BAA+B,EAAE,CAAC;QAEvC,IAAI,CAAC,eAAe,GAAG,IAAI,oCAAoC,CAAC,IAAI,CAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC;IAC9H,CAAC;IAEO,WAAW,CAAC,SAAiB,EAAE,SAAiB,EAAE,WAAmB;QACzE,MAAM,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QACnD,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,MAAM,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;QACzC,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACnC,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3B,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,MAAM,yBAAyB,GAAG,IAAI,CAAC,yBAAyB,CAAC;QACjE,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACnC,MAAM,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;QACzC,MAAM,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;QAC7C,MAAM,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAC/C,MAAM,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QAEnD,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;QAC/B,IAAI,CAAC,eAAe,GAAG,IAAI,oCAAoC,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,EAAE,SAAS,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC;QAEhI,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;QAC7C,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,yBAAyB,GAAG,yBAAyB,CAAC;QAC3D,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;QACvC,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;QACzC,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;QAE7C,IAAI,CAAC,iCAAiC,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC;IACjF,CAAC;IAED,6EAA6E;IAE7E,IAAW,WAAW;QAClB,OAAO,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC;IAC5C,CAAC;IAED,IAAW,WAAW,CAAC,KAAa;QAChC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;IAC5F,CAAC;IAED,0EAA0E;IAE1E,IAAW,SAAS;QAChB,OAAO,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC;IAC1C,CAAC;IAED,IAAW,SAAS,CAAC,KAAa;QAC9B,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;IAC9F,CAAC;IAED,+EAA+E;IAE/E,IAAW,SAAS;QAChB,OAAO,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC;IAC1C,CAAC;IAED,IAAW,SAAS,CAAC,KAAa;QAC9B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,KAAK,EAAE,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;IAC9F,CAAC;IAED,4EAA4E;IAE5E,IAAW,OAAO;QACd,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC;IAC7C,CAAC;IAED,IAAW,OAAO,CAAC,KAAa;QAC5B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IAC9C,CAAC;IAED,mEAAmE;IAEnE,IAAW,aAAa;QACpB,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC;IACnD,CAAC;IAED,IAAW,aAAa,CAAC,KAAa;QAClC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;IACpD,CAAC;IAED,gGAAgG;IAEhG,IAAW,IAAI;QACX,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC;IAC1C,CAAC;IAED,IAAW,IAAI,CAAC,KAAa;QACzB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;IAC3C,CAAC;IAED,0IAA0I;IAE1I,IAAW,IAAI;QACX,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC;IAC1C,CAAC;IAED,IAAW,IAAI,CAAC,KAAa;QACzB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;IAC3C,CAAC;IAED,+GAA+G;IAE/G,IAAW,UAAU;QACjB,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC;IAChD,CAAC;IAED,IAAW,UAAU,CAAC,KAAa;QAC/B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IACjD,CAAC;IAED,0EAA0E;IAE1E,IAAW,MAAM;QACb,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC;IAC5C,CAAC;IAED,IAAW,MAAM,CAAC,KAAa;QAC3B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IAC7C,CAAC;IAED,qFAAqF;IAErF,IAAW,OAAO;QACd,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC;IAC7C,CAAC;IAED,IAAW,OAAO,CAAC,KAAa;QAC5B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IAC9C,CAAC;IAED,iJAAiJ;IAEjJ,IAAW,yBAAyB;QAChC,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,yBAAyB,CAAC;IAC/D,CAAC;IAED,IAAW,yBAAyB,CAAC,KAAc;QAC/C,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,yBAAyB,GAAG,KAAK,CAAC;IAChE,CAAC;IAED,iEAAiE;IAEjE,IAAW,UAAU;QACjB,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC;IAChD,CAAC;IAED,IAAW,UAAU,CAAC,KAAc;QAChC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IACjD,CAAC;IAED,sEAAsE;IAEtE,IAAW,aAAa;QACpB,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC;IACnD,CAAC;IAED,IAAW,aAAa,CAAC,KAAc;QACnC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;IACpD,CAAC;IAED,+GAA+G;IAE/G,IAAW,gBAAgB;QACvB,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,gBAAgB,CAAC;IACtD,CAAC;IAED,IAAW,gBAAgB,CAAC,KAAa;QACrC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;IACvD,CAAC;IAED,+EAA+E;IAE/E,IAAW,eAAe;QACtB,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,eAAe,CAAC;IACrD,CAAC;IAED,IAAW,eAAe,CAAC,KAAa;QACpC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;IACtD,CAAC;IAED,6EAA6E;IAE7E,IAAW,kBAAkB;QACzB,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,kBAAkB,CAAC;IACxD,CAAC;IAED,IAAW,kBAAkB,CAAC,KAAa;QACvC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;IACzD,CAAC;IAED;;;OAGG;IACa,YAAY;QACxB,OAAO,sCAAsC,CAAC;IAClD,CAAC;IAED;;OAEG;IACH,IAAW,MAAM;QACb,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC;IAED;;OAEG;IACH,IAAW,SAAS;QAChB,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC;IAED;;OAEG;IACH,IAAW,UAAU;QACjB,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC;IAEkB,WAAW,CAAC,KAAgC;QAC3D,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAEzB,IAAI,CAAC,eAAe,CAAC,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,KAAgC,CAAC;QACtG,IAAI,CAAC,eAAe,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE,KAAgC,CAAC;QACpG,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,KAAe,CAAC;IAC9E,CAAC;IAEkB,mBAAmB;QAClC,MAAM,KAAK,GAAa,EAAE,CAAC;QAC3B,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,iBAAiB,cAAc,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACnE,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,iBAAiB,oBAAoB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QAC/E,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,iBAAiB,WAAW,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QAC7D,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,iBAAiB,WAAW,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QAC7D,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,iBAAiB,iBAAiB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACzE,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,iBAAiB,aAAa,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QACjE,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,iBAAiB,cAAc,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACnE,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,iBAAiB,gCAAgC,IAAI,CAAC,yBAAyB,GAAG,CAAC,CAAC;QACvG,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,iBAAiB,iBAAiB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACzE,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,iBAAiB,oBAAoB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QAC/E,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,iBAAiB,uBAAuB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QACrF,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,iBAAiB,sBAAsB,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;QACnF,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,iBAAiB,yBAAyB,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;QACzF,OAAO,KAAK,CAAC,mBAAmB,EAAE,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1D,CAAC;IAEe,SAAS;QACrB,MAAM,mBAAmB,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC;QAC9C,mBAAmB,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC3C,mBAAmB,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;QACvD,mBAAmB,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACrC,mBAAmB,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACrC,mBAAmB,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACjD,mBAAmB,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QACzC,mBAAmB,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC3C,mBAAmB,CAAC,yBAAyB,GAAG,IAAI,CAAC,yBAAyB,CAAC;QAC/E,mBAAmB,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACjD,mBAAmB,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;QACvD,mBAAmB,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;QAC3D,mBAAmB,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAC7D,mBAAmB,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QACjE,OAAO,mBAAmB,CAAC;IAC/B,CAAC;IAEe,YAAY,CAAC,mBAAwB;QACjD,KAAK,CAAC,YAAY,CAAC,mBAAmB,CAAC,CAAC;QACxC,IAAI,CAAC,OAAO,GAAG,mBAAmB,CAAC,OAAO,CAAC;QAC3C,IAAI,CAAC,aAAa,GAAG,mBAAmB,CAAC,aAAa,CAAC;QACvD,IAAI,CAAC,IAAI,GAAG,mBAAmB,CAAC,IAAI,CAAC;QACrC,IAAI,CAAC,IAAI,GAAG,mBAAmB,CAAC,IAAI,CAAC;QACrC,IAAI,CAAC,UAAU,GAAG,mBAAmB,CAAC,UAAU,CAAC;QACjD,IAAI,CAAC,MAAM,GAAG,mBAAmB,CAAC,MAAM,CAAC;QACzC,IAAI,CAAC,OAAO,GAAG,mBAAmB,CAAC,OAAO,CAAC;QAC3C,IAAI,CAAC,yBAAyB,GAAG,mBAAmB,CAAC,yBAAyB,CAAC;QAC/E,IAAI,CAAC,UAAU,GAAG,mBAAmB,CAAC,UAAU,CAAC;QACjD,IAAI,CAAC,aAAa,GAAG,mBAAmB,CAAC,aAAa,CAAC;QACvD,IAAI,CAAC,eAAe,GAAG,mBAAmB,CAAC,eAAe,CAAC;QAC3D,IAAI,CAAC,gBAAgB,GAAG,mBAAmB,CAAC,gBAAgB,CAAC;QAC7D,IAAI,CAAC,kBAAkB,GAAG,mBAAmB,CAAC,kBAAkB,CAAC;IACrE,CAAC;CACJ;AAvPG;IADC,sBAAsB,CAAC,cAAc,8CAAsC,SAAS,CAAC;uEAGrF;AAQD;IADC,sBAAsB,CAAC,oBAAoB,wCAAgC,SAAS,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC;qEAG3G;AAQD;IADC,sBAAsB,CAAC,yBAAyB,wCAAgC,SAAS,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC;qEAGhH;AAQD;IADC,sBAAsB,CAAC,SAAS,sCAA8B,MAAM,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;mEAG3F;AAQD;IADC,sBAAsB,CAAC,UAAU,wCAAgC,MAAM,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC;yEAG5F;AAQD;IADC,sBAAsB,CAAC,MAAM,wCAAgC,MAAM,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC;gEAGxF;AAQD;IADC,sBAAsB,CAAC,OAAO,wCAAgC,MAAM,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC;gEAG7F;AAQD;IADC,sBAAsB,CAAC,cAAc,wCAAgC,MAAM,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;sEAGlG;AAQD;IADC,sBAAsB,CAAC,QAAQ,wCAAgC,MAAM,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC;kEAG3F;AAQD;IADC,sBAAsB,CAAC,SAAS,wCAAgC,MAAM,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC;mEAG3F;AAQD;IADC,sBAAsB,CAAC,+BAA+B,0CAAkC,MAAM,CAAC;qFAG/F;AAQD;IADC,sBAAsB,CAAC,aAAa,0CAAkC,MAAM,CAAC;sEAG7E;AAQD;IADC,sBAAsB,CAAC,gBAAgB,0CAAkC,MAAM,CAAC;yEAGhF;AAQD;IADC,sBAAsB,CAAC,SAAS,sCAA8B,MAAM,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;4EAG3F;AAQD;IADC,sBAAsB,CAAC,QAAQ,wCAAgC,MAAM,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC;2EAG1F;AAQD;IADC,sBAAsB,CAAC,WAAW,wCAAgC,MAAM,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC;8EAG7F;AAiGL,aAAa,CAAC,8CAA8C,EAAE,oCAAoC,CAAC,CAAC","sourcesContent":["import type { Scene, FrameGraph, NodeRenderGraphConnectionPoint, NodeRenderGraphBuildState, FrameGraphTextureHandle, Camera } from \"core/index\";\r\nimport { Constants } from \"core/Engines/constants\";\r\nimport { RegisterClass } from \"../../../../Misc/typeStore\";\r\nimport { NodeRenderGraphBlockConnectionPointTypes } from \"../../Types/nodeRenderGraphTypes\";\r\nimport { editableInPropertyPage, PropertyTypeForEdition } from \"../../../../Decorators/nodeDecorator\";\r\nimport { FrameGraphSSAO2RenderingPipelineTask } from \"../../../Tasks/PostProcesses/ssao2RenderingPipelineTask\";\r\nimport { NodeRenderGraphBasePostProcessBlock } from \"./basePostProcessBlock\";\r\n\r\n/**\r\n * Block that implements the SSAO2 post process\r\n */\r\nexport class NodeRenderGraphSSAO2PostProcessBlock extends NodeRenderGraphBasePostProcessBlock {\r\n    protected override _frameGraphTask: FrameGraphSSAO2RenderingPipelineTask;\r\n\r\n    public override _additionalConstructionParameters: [number, number, number];\r\n\r\n    /**\r\n     * Gets the frame graph task associated with this block\r\n     */\r\n    public override get task() {\r\n        return this._frameGraphTask;\r\n    }\r\n\r\n    /**\r\n     * Create a new NodeRenderGraphSSAO2PostProcessBlock\r\n     * @param name defines the block name\r\n     * @param frameGraph defines the hosting frame graph\r\n     * @param scene defines the hosting scene\r\n     * @param ratioSSAO The ratio between the SSAO texture size and the source texture size (default: 1)\r\n     * @param ratioBlur The ratio between the SSAO blur texture size and the source texture size (default: 1)\r\n     * @param textureType The texture type used by the different post processes created by SSAO2 (default: Constants.TEXTURETYPE_UNSIGNED_BYTE)\r\n     */\r\n    public constructor(name: string, frameGraph: FrameGraph, scene: Scene, ratioSSAO = 1, ratioBlur = 1, textureType = Constants.TEXTURETYPE_UNSIGNED_BYTE) {\r\n        super(name, frameGraph, scene);\r\n\r\n        this._additionalConstructionParameters = [ratioSSAO, ratioBlur, textureType];\r\n\r\n        this.registerInput(\"camera\", NodeRenderGraphBlockConnectionPointTypes.Camera);\r\n        this.registerInput(\"geomDepth\", NodeRenderGraphBlockConnectionPointTypes.TextureViewDepth);\r\n        this.registerInput(\"geomNormal\", NodeRenderGraphBlockConnectionPointTypes.TextureViewNormal);\r\n\r\n        this._finalizeInputOutputRegistering();\r\n\r\n        this._frameGraphTask = new FrameGraphSSAO2RenderingPipelineTask(this.name, frameGraph, ratioSSAO, ratioBlur, textureType);\r\n    }\r\n\r\n    private _createTask(ratioSSAO: number, ratioBlur: number, textureType: number) {\r\n        const sourceSamplingMode = this.sourceSamplingMode;\r\n        const samples = this.samples;\r\n        const totalStrength = this.totalStrength;\r\n        const base = this.base;\r\n        const maxZ = this.maxZ;\r\n        const minZAspect = this.minZAspect;\r\n        const radius = this.radius;\r\n        const epsilon = this.epsilon;\r\n        const useViewportInCombineStage = this.useViewportInCombineStage;\r\n        const bypassBlur = this.bypassBlur;\r\n        const expensiveBlur = this.expensiveBlur;\r\n        const bilateralSoften = this.bilateralSoften;\r\n        const bilateralSamples = this.bilateralSamples;\r\n        const bilateralTolerance = this.bilateralTolerance;\r\n\r\n        this._frameGraphTask.dispose();\r\n        this._frameGraphTask = new FrameGraphSSAO2RenderingPipelineTask(this.name, this._frameGraph, ratioSSAO, ratioBlur, textureType);\r\n\r\n        this.sourceSamplingMode = sourceSamplingMode;\r\n        this.samples = samples;\r\n        this.totalStrength = totalStrength;\r\n        this.base = base;\r\n        this.maxZ = maxZ;\r\n        this.minZAspect = minZAspect;\r\n        this.radius = radius;\r\n        this.epsilon = epsilon;\r\n        this.useViewportInCombineStage = useViewportInCombineStage;\r\n        this.bypassBlur = bypassBlur;\r\n        this.expensiveBlur = expensiveBlur;\r\n        this.bilateralSoften = bilateralSoften;\r\n        this.bilateralSamples = bilateralSamples;\r\n        this.bilateralTolerance = bilateralTolerance;\r\n\r\n        this._additionalConstructionParameters = [ratioSSAO, ratioBlur, textureType];\r\n    }\r\n\r\n    /** The texture type used by the different post processes created by SSAO2 */\r\n    @editableInPropertyPage(\"Texture type\", PropertyTypeForEdition.TextureType, \"TEXTURE\")\r\n    public get textureType() {\r\n        return this._frameGraphTask.textureType;\r\n    }\r\n\r\n    public set textureType(value: number) {\r\n        this._createTask(this._frameGraphTask.ratioSSAO, this._frameGraphTask.ratioBlur, value);\r\n    }\r\n\r\n    /** The ratio between the SSAO texture size and the source texture size */\r\n    @editableInPropertyPage(\"SSAO texture ratio\", PropertyTypeForEdition.Float, \"TEXTURE\", { min: 0.1, max: 1 })\r\n    public get ratioSSAO() {\r\n        return this._frameGraphTask.ratioSSAO;\r\n    }\r\n\r\n    public set ratioSSAO(value: number) {\r\n        this._createTask(value, this._frameGraphTask.ratioBlur, this._frameGraphTask.textureType);\r\n    }\r\n\r\n    /** The ratio between the SSAO blur texture size and the source texture size */\r\n    @editableInPropertyPage(\"SSAO blur texture ratio\", PropertyTypeForEdition.Float, \"TEXTURE\", { min: 0.1, max: 1 })\r\n    public get ratioBlur() {\r\n        return this._frameGraphTask.ratioBlur;\r\n    }\r\n\r\n    public set ratioBlur(value: number) {\r\n        this._createTask(this._frameGraphTask.ratioSSAO, value, this._frameGraphTask.textureType);\r\n    }\r\n\r\n    /** Number of samples used for the SSAO calculations. Default value is 8. */\r\n    @editableInPropertyPage(\"Samples\", PropertyTypeForEdition.Int, \"SSAO\", { min: 1, max: 128 })\r\n    public get samples() {\r\n        return this._frameGraphTask.ssao.samples;\r\n    }\r\n\r\n    public set samples(value: number) {\r\n        this._frameGraphTask.ssao.samples = value;\r\n    }\r\n\r\n    /** The strength of the SSAO post-process. Default value is 1.0. */\r\n    @editableInPropertyPage(\"Strength\", PropertyTypeForEdition.Float, \"SSAO\", { min: 0, max: 3 })\r\n    public get totalStrength() {\r\n        return this._frameGraphTask.ssao.totalStrength;\r\n    }\r\n\r\n    public set totalStrength(value: number) {\r\n        this._frameGraphTask.ssao.totalStrength = value;\r\n    }\r\n\r\n    /** The base color of the SSAO post-process. The final result is \"base + ssao\" between [0, 1] */\r\n    @editableInPropertyPage(\"Base\", PropertyTypeForEdition.Float, \"SSAO\", { min: 0, max: 1 })\r\n    public get base() {\r\n        return this._frameGraphTask.ssao.base;\r\n    }\r\n\r\n    public set base(value: number) {\r\n        this._frameGraphTask.ssao.base = value;\r\n    }\r\n\r\n    /** Maximum depth value to still render AO. A smooth falloff makes the dimming more natural, so there will be no abrupt shading change. */\r\n    @editableInPropertyPage(\"Max Z\", PropertyTypeForEdition.Float, \"SSAO\", { min: 0, max: 10000 })\r\n    public get maxZ() {\r\n        return this._frameGraphTask.ssao.maxZ;\r\n    }\r\n\r\n    public set maxZ(value: number) {\r\n        this._frameGraphTask.ssao.maxZ = value;\r\n    }\r\n\r\n    /** In order to save performances, SSAO radius is clamped on close geometry. This ratio changes by how much. */\r\n    @editableInPropertyPage(\"Min Z aspect\", PropertyTypeForEdition.Float, \"SSAO\", { min: 0, max: 0.5 })\r\n    public get minZAspect() {\r\n        return this._frameGraphTask.ssao.minZAspect;\r\n    }\r\n\r\n    public set minZAspect(value: number) {\r\n        this._frameGraphTask.ssao.minZAspect = value;\r\n    }\r\n\r\n    /** The radius around the analyzed pixel used by the SSAO post-process. */\r\n    @editableInPropertyPage(\"Radius\", PropertyTypeForEdition.Float, \"SSAO\", { min: 0, max: 10 })\r\n    public get radius() {\r\n        return this._frameGraphTask.ssao.radius;\r\n    }\r\n\r\n    public set radius(value: number) {\r\n        this._frameGraphTask.ssao.radius = value;\r\n    }\r\n\r\n    /** Used in SSAO calculations to compensate for accuracy issues with depth values. */\r\n    @editableInPropertyPage(\"Epsilon\", PropertyTypeForEdition.Float, \"SSAO\", { min: 0, max: 1 })\r\n    public get epsilon() {\r\n        return this._frameGraphTask.ssao.epsilon;\r\n    }\r\n\r\n    public set epsilon(value: number) {\r\n        this._frameGraphTask.ssao.epsilon = value;\r\n    }\r\n\r\n    /** Indicates that the combine stage should use the current camera viewport to render the SSAO result on only a portion of the output texture. */\r\n    @editableInPropertyPage(\"Use viewport in combine stage\", PropertyTypeForEdition.Boolean, \"SSAO\")\r\n    public get useViewportInCombineStage() {\r\n        return this._frameGraphTask.ssao.useViewportInCombineStage;\r\n    }\r\n\r\n    public set useViewportInCombineStage(value: boolean) {\r\n        this._frameGraphTask.ssao.useViewportInCombineStage = value;\r\n    }\r\n\r\n    /** Skips the denoising (blur) stage of the SSAO calculations. */\r\n    @editableInPropertyPage(\"Bypass blur\", PropertyTypeForEdition.Boolean, \"Blur\")\r\n    public get bypassBlur() {\r\n        return this._frameGraphTask.ssao.bypassBlur;\r\n    }\r\n\r\n    public set bypassBlur(value: boolean) {\r\n        this._frameGraphTask.ssao.bypassBlur = value;\r\n    }\r\n\r\n    /** Enables the configurable bilateral denoising (blurring) filter. */\r\n    @editableInPropertyPage(\"Expensive blur\", PropertyTypeForEdition.Boolean, \"Blur\")\r\n    public get expensiveBlur() {\r\n        return this._frameGraphTask.ssao.expensiveBlur;\r\n    }\r\n\r\n    public set expensiveBlur(value: boolean) {\r\n        this._frameGraphTask.ssao.expensiveBlur = value;\r\n    }\r\n\r\n    /** The number of samples the bilateral filter uses in both dimensions when denoising the SSAO calculations. */\r\n    @editableInPropertyPage(\"Samples\", PropertyTypeForEdition.Int, \"Blur\", { min: 1, max: 128 })\r\n    public get bilateralSamples() {\r\n        return this._frameGraphTask.ssao.bilateralSamples;\r\n    }\r\n\r\n    public set bilateralSamples(value: number) {\r\n        this._frameGraphTask.ssao.bilateralSamples = value;\r\n    }\r\n\r\n    /** Controls the shape of the denoising kernel used by the bilateral filter. */\r\n    @editableInPropertyPage(\"Soften\", PropertyTypeForEdition.Float, \"Blur\", { min: 0, max: 1 })\r\n    public get bilateralSoften() {\r\n        return this._frameGraphTask.ssao.bilateralSoften;\r\n    }\r\n\r\n    public set bilateralSoften(value: number) {\r\n        this._frameGraphTask.ssao.bilateralSoften = value;\r\n    }\r\n\r\n    /** How forgiving the bilateral denoiser should be when rejecting samples. */\r\n    @editableInPropertyPage(\"Tolerance\", PropertyTypeForEdition.Float, \"Blur\", { min: 0, max: 1 })\r\n    public get bilateralTolerance() {\r\n        return this._frameGraphTask.ssao.bilateralTolerance;\r\n    }\r\n\r\n    public set bilateralTolerance(value: number) {\r\n        this._frameGraphTask.ssao.bilateralTolerance = value;\r\n    }\r\n\r\n    /**\r\n     * Gets the current class name\r\n     * @returns the class name\r\n     */\r\n    public override getClassName() {\r\n        return \"NodeRenderGraphSSAO2PostProcessBlock\";\r\n    }\r\n\r\n    /**\r\n     * Gets the camera input component\r\n     */\r\n    public get camera(): NodeRenderGraphConnectionPoint {\r\n        return this._inputs[2];\r\n    }\r\n\r\n    /**\r\n     * Gets the geometry depth input component\r\n     */\r\n    public get geomDepth(): NodeRenderGraphConnectionPoint {\r\n        return this._inputs[3];\r\n    }\r\n\r\n    /**\r\n     * Gets the geometry normal input component\r\n     */\r\n    public get geomNormal(): NodeRenderGraphConnectionPoint {\r\n        return this._inputs[4];\r\n    }\r\n\r\n    protected override _buildBlock(state: NodeRenderGraphBuildState) {\r\n        super._buildBlock(state);\r\n\r\n        this._frameGraphTask.normalTexture = this.geomNormal.connectedPoint?.value as FrameGraphTextureHandle;\r\n        this._frameGraphTask.depthTexture = this.geomDepth.connectedPoint?.value as FrameGraphTextureHandle;\r\n        this._frameGraphTask.camera = this.camera.connectedPoint?.value as Camera;\r\n    }\r\n\r\n    protected override _dumpPropertiesCode() {\r\n        const codes: string[] = [];\r\n        codes.push(`${this._codeVariableName}.samples = ${this.samples};`);\r\n        codes.push(`${this._codeVariableName}.totalStrength = ${this.totalStrength};`);\r\n        codes.push(`${this._codeVariableName}.base = ${this.base};`);\r\n        codes.push(`${this._codeVariableName}.maxZ = ${this.maxZ};`);\r\n        codes.push(`${this._codeVariableName}.minZAspect = ${this.minZAspect};`);\r\n        codes.push(`${this._codeVariableName}.radius = ${this.radius};`);\r\n        codes.push(`${this._codeVariableName}.epsilon = ${this.epsilon};`);\r\n        codes.push(`${this._codeVariableName}.useViewportInCombineStage = ${this.useViewportInCombineStage};`);\r\n        codes.push(`${this._codeVariableName}.bypassBlur = ${this.bypassBlur};`);\r\n        codes.push(`${this._codeVariableName}.expensiveBlur = ${this.expensiveBlur};`);\r\n        codes.push(`${this._codeVariableName}.bilateralSamples = ${this.bilateralSamples};`);\r\n        codes.push(`${this._codeVariableName}.bilateralSoften = ${this.bilateralSoften};`);\r\n        codes.push(`${this._codeVariableName}.bilateralTolerance = ${this.bilateralTolerance};`);\r\n        return super._dumpPropertiesCode() + codes.join(\"\\n\");\r\n    }\r\n\r\n    public override serialize(): any {\r\n        const serializationObject = super.serialize();\r\n        serializationObject.samples = this.samples;\r\n        serializationObject.totalStrength = this.totalStrength;\r\n        serializationObject.base = this.base;\r\n        serializationObject.maxZ = this.maxZ;\r\n        serializationObject.minZAspect = this.minZAspect;\r\n        serializationObject.radius = this.radius;\r\n        serializationObject.epsilon = this.epsilon;\r\n        serializationObject.useViewportInCombineStage = this.useViewportInCombineStage;\r\n        serializationObject.bypassBlur = this.bypassBlur;\r\n        serializationObject.expensiveBlur = this.expensiveBlur;\r\n        serializationObject.bilateralSoften = this.bilateralSoften;\r\n        serializationObject.bilateralSamples = this.bilateralSamples;\r\n        serializationObject.bilateralTolerance = this.bilateralTolerance;\r\n        return serializationObject;\r\n    }\r\n\r\n    public override _deserialize(serializationObject: any) {\r\n        super._deserialize(serializationObject);\r\n        this.samples = serializationObject.samples;\r\n        this.totalStrength = serializationObject.totalStrength;\r\n        this.base = serializationObject.base;\r\n        this.maxZ = serializationObject.maxZ;\r\n        this.minZAspect = serializationObject.minZAspect;\r\n        this.radius = serializationObject.radius;\r\n        this.epsilon = serializationObject.epsilon;\r\n        this.useViewportInCombineStage = serializationObject.useViewportInCombineStage;\r\n        this.bypassBlur = serializationObject.bypassBlur;\r\n        this.expensiveBlur = serializationObject.expensiveBlur;\r\n        this.bilateralSoften = serializationObject.bilateralSoften;\r\n        this.bilateralSamples = serializationObject.bilateralSamples;\r\n        this.bilateralTolerance = serializationObject.bilateralTolerance;\r\n    }\r\n}\r\n\r\nRegisterClass(\"BABYLON.NodeRenderGraphSSAO2PostProcessBlock\", NodeRenderGraphSSAO2PostProcessBlock);\r\n"]}