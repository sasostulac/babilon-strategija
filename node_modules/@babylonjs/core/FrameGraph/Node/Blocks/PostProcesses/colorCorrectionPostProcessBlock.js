import { __decorate } from "../../../../tslib.es6.js";
import { RegisterClass } from "../../../../Misc/typeStore.js";
import { editableInPropertyPage } from "../../../../Decorators/nodeDecorator.js";
import { FrameGraphColorCorrectionTask } from "../../../Tasks/PostProcesses/colorCorrectionTask.js";
import { NodeRenderGraphBasePostProcessBlock } from "./basePostProcessBlock.js";
import { ThinColorCorrectionPostProcess } from "../../../../PostProcesses/thinColorCorrectionPostProcess.js";
/**
 * Block that implements the color correction post process
 */
export class NodeRenderGraphColorCorrectionPostProcessBlock extends NodeRenderGraphBasePostProcessBlock {
    /**
     * Gets the frame graph task associated with this block
     */
    get task() {
        return this._frameGraphTask;
    }
    /**
     * Create a new NodeRenderGraphColorCorrectionPostProcessBlock
     * @param name defines the block name
     * @param frameGraph defines the hosting frame graph
     * @param scene defines the hosting scene
     * @param colorTableUrl defines the URL of the color table
     */
    constructor(name, frameGraph, scene, colorTableUrl = "") {
        super(name, frameGraph, scene);
        this._additionalConstructionParameters = [colorTableUrl];
        this._finalizeInputOutputRegistering();
        this._frameGraphTask = new FrameGraphColorCorrectionTask(this.name, frameGraph, colorTableUrl, new ThinColorCorrectionPostProcess(name, frameGraph.scene, colorTableUrl));
    }
    _createTask(colorTableUrl) {
        const sourceSamplingMode = this._frameGraphTask.sourceSamplingMode;
        this._frameGraphTask.dispose();
        this._frameGraphTask = new FrameGraphColorCorrectionTask(this.name, this._frameGraph, colorTableUrl, new ThinColorCorrectionPostProcess(this.name, this._frameGraph.scene, colorTableUrl));
        this._frameGraphTask.sourceSamplingMode = sourceSamplingMode;
        this._additionalConstructionParameters = [colorTableUrl];
    }
    /** The color table URL */
    get colorTableUrl() {
        return this._frameGraphTask.postProcess.colorTableUrl;
    }
    set colorTableUrl(value) {
        this._createTask(value);
    }
    /**
     * Gets the current class name
     * @returns the class name
     */
    getClassName() {
        return "NodeRenderGraphColorCorrectionPostProcessBlock";
    }
}
__decorate([
    editableInPropertyPage("Color Table URL", 10 /* PropertyTypeForEdition.String */, "PROPERTIES")
], NodeRenderGraphColorCorrectionPostProcessBlock.prototype, "colorTableUrl", null);
RegisterClass("BABYLON.NodeRenderGraphColorCorrectionPostProcessBlock", NodeRenderGraphColorCorrectionPostProcessBlock);
//# sourceMappingURL=colorCorrectionPostProcessBlock.js.map