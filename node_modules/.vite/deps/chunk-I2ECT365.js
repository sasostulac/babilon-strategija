import {
  FlowGraphBlock,
  RichTypeBoolean
} from "./chunk-OCDSLKBA.js";

// node_modules/@babylonjs/core/FlowGraph/Blocks/Data/flowGraphCachedOperationBlock.js
var CacheName = "cachedOperationValue";
var CacheExecIdName = "cachedExecutionId";
var FlowGraphCachedOperationBlock = class extends FlowGraphBlock {
  constructor(outputRichType, config) {
    super(config);
    this.value = this.registerDataOutput("value", outputRichType);
    this.isValid = this.registerDataOutput("isValid", RichTypeBoolean);
  }
  _updateOutputs(context) {
    const cachedExecutionId = context._getExecutionVariable(this, CacheExecIdName, -1);
    const cachedValue = context._getExecutionVariable(this, CacheName, null);
    if (cachedValue !== void 0 && cachedValue !== null && cachedExecutionId === context.executionId) {
      this.isValid.setValue(true, context);
      this.value.setValue(cachedValue, context);
    } else {
      try {
        const calculatedValue = this._doOperation(context);
        if (calculatedValue === void 0 || calculatedValue === null) {
          this.isValid.setValue(false, context);
          return;
        }
        context._setExecutionVariable(this, CacheName, calculatedValue);
        context._setExecutionVariable(this, CacheExecIdName, context.executionId);
        this.value.setValue(calculatedValue, context);
        this.isValid.setValue(true, context);
      } catch (e) {
        this.isValid.setValue(false, context);
      }
    }
  }
};

export {
  FlowGraphCachedOperationBlock
};
//# sourceMappingURL=chunk-I2ECT365.js.map
