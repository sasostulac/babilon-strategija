import {
  AbstractAudioBus
} from "./chunk-EVARPMET.js";
import {
  _WebAudioBaseSubGraph
} from "./chunk-RO2Q2ME2.js";

// node_modules/@babylonjs/core/AudioV2/abstractAudio/mainAudioBus.js
var MainAudioBus = class extends AbstractAudioBus {
  constructor(name, engine) {
    super(name, engine);
  }
};

// node_modules/@babylonjs/core/AudioV2/webAudio/webAudioMainBus.js
var _WebAudioMainBus = class __WebAudioMainBus extends MainAudioBus {
  /** @internal */
  constructor(name, engine) {
    super(name, engine);
    this._subGraph = new __WebAudioMainBus._SubGraph(this);
  }
  /** @internal */
  async _initAsync(options) {
    await this._subGraph.initAsync(options);
    if (this.engine.mainOut) {
      if (!this._connect(this.engine.mainOut)) {
        throw new Error("Connect failed");
      }
    }
    this.engine._addMainBus(this);
  }
  /** @internal */
  dispose() {
    super.dispose();
    this.engine._removeMainBus(this);
  }
  /** @internal */
  get _inNode() {
    return this._subGraph._inNode;
  }
  /** @internal */
  get _outNode() {
    return this._subGraph._outNode;
  }
  _connect(node) {
    const connected = super._connect(node);
    if (!connected) {
      return false;
    }
    if (node._inNode) {
      this._outNode?.connect(node._inNode);
    }
    return true;
  }
  _disconnect(node) {
    const disconnected = super._disconnect(node);
    if (!disconnected) {
      return false;
    }
    if (node._inNode) {
      this._outNode?.disconnect(node._inNode);
    }
    return true;
  }
  /** @internal */
  getClassName() {
    return "_WebAudioMainBus";
  }
};
_WebAudioMainBus._SubGraph = class extends _WebAudioBaseSubGraph {
  get _downstreamNodes() {
    return this._owner._downstreamNodes ?? null;
  }
};

export {
  MainAudioBus,
  _WebAudioMainBus
};
//# sourceMappingURL=chunk-IESJU5C4.js.map
